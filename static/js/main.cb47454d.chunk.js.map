{"version":3,"sources":["components/SongList.js","actions/index.js","components/SongDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","songList","_this","props","songs","map","song","react_default","a","createElement","className","key","id","onClick","selectSong","title","this","Component","connect","state","type","payload","_ref","duration","App","components_SongList","components_SongDetail","combineReducers","arguments","length","undefined","action","ReactDOM","render","es","store","createStore","reducers","components_App","document","querySelector"],"mappings":"+NAKMA,6MAEJC,SAAW,WACT,OAAOC,EAAKC,MAAMC,MAAMC,IAAI,SAAAC,GAC1B,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,IAAKL,EAAKM,IAChCL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,UACEC,UAAU,oBACVG,QAAW,kBAAMX,EAAKC,MAAMW,WAAWR,KAFzC,WAOFC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAKS,mFAOnC,OACIR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBM,KAAKf,mBAtBxBgB,aAgCRC,cANS,SAACC,GACvB,MAAO,CACLf,MAAOe,EAAMf,QAIuB,CAACU,WCrCd,SAAAR,GACzB,MAAO,CACLc,KAAM,gBACNC,QAASf,KDkCEY,CAAuClB,GEhBvCkB,cANS,SAACC,GACvB,MAAO,CACLb,KAAMa,EAAMb,OAIDY,CAlBI,SAAAI,GAAc,IAAXhB,EAAWgB,EAAXhB,KACpB,OAAKA,EAIHC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAKH,EAAKS,OACVR,EAAAC,EAAAC,cAAA,UAAKH,EAAKiB,WALLhB,EAAAC,EAAAC,cAAA,qCCcIe,EAfH,WACV,OACEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACgB,EAAD,OAEFlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAACiB,EAAD,UCQKC,cAAgB,CAC7BvB,MAnBe,WACf,MAAQ,CACJ,CAAEQ,GAAI,EAAGG,MAAO,SAAUQ,SAAU,KACpC,CAAEX,GAAI,EAAGG,MAAO,SAAUQ,SAAU,KACpC,CAAEX,GAAI,EAAGG,MAAO,SAAUQ,SAAU,KACpC,CAAEX,GAAI,EAAGG,MAAO,SAAUQ,SAAU,OAexCjB,KAXmB,WAA0B,IAAzBa,EAAyBS,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAMG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAQC,EAAOX,MACb,IAAK,gBACH,OAAOW,EAAOV,QAChB,QACE,OAAOF,MCRba,IAASC,OACP1B,EAAAC,EAAAC,cAACyB,EAAA,EAAD,CAAUC,MAAOC,YAAYC,IAC3B9B,EAAAC,EAAAC,cAAC6B,EAAD,OAGFC,SAASC,cAAc","file":"static/js/main.cb47454d.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectSong } from '../actions'\r\n\r\nclass SongList extends Component {\r\n\r\n  songList = () => {\r\n    return this.props.songs.map(song => {\r\n      return (\r\n        <div className=\"item\" key={song.id}>\r\n        <div className=\"right floated content\">\r\n          <button\r\n            className=\"ui button primary\"\r\n            onClick = {() => this.props.selectSong(song)}\r\n          >\r\n            Select\r\n          </button>\r\n        </div>\r\n        <div className=\"content\">{song.title}</div>\r\n      </div>\r\n      )\r\n    })\r\n  }\r\n \r\n  render() {\r\n    return (\r\n        <div className=\"ui divided list\">{this.songList()}</div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    songs: state.songs\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, {selectSong})(SongList);","export const selectSong = (song => {\r\n  return {\r\n    type: 'SONG_SELECTED',\r\n    payload: song\r\n  };\r\n});","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst SongDetail = ({ song }) => {\r\n  if (!song) {\r\n    return <h1> PLEASE SELECT A SONG</h1>\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>{song.title}</h1>\r\n      <h1>{song.duration}</h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    song: state.song\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(SongDetail);","import React from 'react';\r\nimport SongList from './SongList';\r\nimport SongDetail from './SongDetail';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container grid\">\r\n      <div className=\"ui row\">\r\n        <div className=\"column eight wide\">\r\n          <SongList />\r\n        </div>\r\n        <div className=\"column eight wide\">\r\n          <SongDetail />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\n\r\nconst songList = () => {\r\n  return  [\r\n      { id: 1, title: 'song 1', duration: '1' },\r\n      { id: 2, title: 'song 2', duration: '2' },\r\n      { id: 3, title: 'song 3', duration: '3' },\r\n      { id: 4, title: 'song 4', duration: '4' },\r\n    ]\r\n}\r\n\r\nconst selectedSong = (state = null, action) => {\r\n  switch (action.type) {\r\n    case 'SONG_SELECTED':\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default combineReducers({\r\n  songs: songList,\r\n  song: selectedSong\r\n});\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nReactDOM.render(\r\n  <Provider store={createStore(reducers)} >\r\n    <App />\r\n  </Provider>\r\n  ,\r\n  document.querySelector('#root'));\r\n"],"sourceRoot":""}